# connect-fw-to-cdl.xml -- Ansible playbook to run a few commands needed to connect firewalls to CDL
#   Author: Tyson Reed, no implied warranty. Released under GPL
#   v0.1 - February 12, 2021
#
# REQUIRES
# ansible (sudo apt install ansible)
# ansible-galaxy roles will be automatically installed on first run
#
# STEPS
# update vars.yml with valid user/password
# update hosts with list of firewall ip addresses
#
# EXECUTE
# ansible-playbook -i hosts connect-fw-to-cdl.yml
#
---
- name: RUN A FEW CDL COMMANDS ON FIREWALLS
  hosts: all
  connection: local
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/local/bin/python

  roles:
    - role: PaloAltoNetworks.paloaltonetworks

  tasks:

#  - name: check if required output.csv file present
#    stat:
#      path: ./output.csv
#    register: csv_exists
#
#  - name: create empty output.csv file
#    file:
#      path: ./output.csv
#      state: touch
#    when: csv_exists.stat.exists != True
#
  - name: get credentials from file
    include_vars: "vars.yml"
    no_log: "yes"

  - name: connect to each firewall and gather facts
    panos_facts:
      provider: "{{ fw }}"
      gather_subset: ['system']

# update this to determine if name of logging service key is static or just delete all license keys
  - name: connect to each firewall and run command 'delete license key <logging service key>'
    panos_op:
      provider: "{{ fw }}"
      cmd: "delete license key *"
    register: panos

  - name: connect to each firewall and run command 'request license fetch'
    panos_op:
      provider: "{{ fw }}"
      cmd: "request license fetch"
    register: panos

  - name: connect to each firewall and run command 'request logging-service-forwarding certificate delete'
    panos_op:
      provider: "{{ fw }}"
      cmd: "request logging-service-forwarding certificate delete"
    register: panos

  - name: connect to each firewall and run command 'request logging-service-forwarding certificate fetch'
    panos_op:
      provider: "{{ fw }}"
      cmd: "request logging-service-forwarding certificate fetch"
    register: panos

  # copy the json array to a temporary file so we can maniplate it with shell utilities
#  - name: copy to temp file
#    copy:
#      content: "{{ panos.stdout }}"
#      dest: "{{ ansible_net_serial }}_output.json"
#
#  - name: collect only downloaded versions from temporary file
#    shell: cat {{ ansible_net_serial }}_output.json | jq '.response.result."sw-updates".versions.entry[] | select(.downloaded=="yes") | .version' | tr '\n' ',' | tr -d \"
#    register: versions
#
#  - name: write record to output.csv
#    lineinfile:
#      line: "{{ ansible_net_hostname }},{{ ansible_net_serial }},{{ versions.stdout }}"
#      insertafter: EOF
#      dest: output.csv
#    delegate_to: 127.0.0.1
#
#  - name: clean up temp file
#    file:
#      path: "{{ ansible_net_serial }}_output.json"
#      state: absent
#
